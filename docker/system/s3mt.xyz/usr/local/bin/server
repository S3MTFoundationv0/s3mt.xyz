#!/bin/sh

cd /app

# Function to display usage
usage() {
    echo "Usage: $0 -s <service> [-D]"
    echo "    -s <service>   Specify the service to run (nuxt or api)"
    echo "    -D             Run in development mode"
    exit 1
}

# Initialize variables
SERVICE=""
DEV_MODE=0

# Parse command line arguments
while getopts "s:D" opt; do
    case $opt in
    s)
        SERVICE=$OPTARG
        ;;
    D)
        DEV_MODE=1
        ;;
    *)
        usage
        ;;
    esac
done

# Validate service argument
if [ -z "$SERVICE" ]; then
    echo "Error: Service not specified"
    usage
fi

# Determine the yarn command based on the service and mode
if [ "$SERVICE" = "nuxt" ]; then
    if [ $DEV_MODE -eq 1 ]; then
        echo "Running nuxt in development mode (watch)"
        NODE_ENV=development ./node_modules/.bin/nuxt dev
        # NODE_ENV=development ./node_modules/.bin/storybook dev --port 6006
    else
        echo "Running nuxt in prod mode"

        if [ ! -d .nuxt ] || [ ! -f .output/nitro.json ]; then
            echo "【≽ܫ≼】 Nuxt build directory not found..."
            echo "( ͡° ͜ʖ ͡°) Building Nuxt..."
            ./node_modules/.bin/nuxt build
        fi

        node nuxt-prod.js
    fi
elif [ "$SERVICE" = "api" ]; then
    if [ $DEV_MODE -eq 1 ]; then
        echo "Running API in development mode (watch)"
        NODE_ENV=development tsx watch --tsconfig tsconfig.api.json server.ts
    else
        echo "Running API in prod mode"
        NODE_ENV=production tsx --tsconfig tsconfig.api.json server.ts
    fi
else
    echo "Error: Invalid service specified ($SERVICE) t(^^t)"
    echo ""
    echo ""
    usage
fi
